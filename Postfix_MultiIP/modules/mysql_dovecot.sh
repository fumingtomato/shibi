#!/bin/bash

# =================================================================
# MYSQL AND DOVECOT CONFIGURATION MODULE
# Database setup, user management, and Dovecot integration
# =================================================================

# Setup MySQL for mail server
setup_mysql() {
    print_header "Setting Up MySQL for Mail Server"
    
    # Install MySQL and required packages including postfix-mysql
    print_message "Installing MySQL and required packages..."
    DEBIAN_FRONTEND=noninteractive apt-get update
    DEBIAN_FRONTEND=noninteractive apt-get install -y \
        mysql-server \
        mysql-client \
        postfix-mysql \
        dovecot-mysql \
        php-mysql
    
    # Start and enable MySQL
    systemctl start mysql
    systemctl enable mysql
    
    # Secure MySQL installation
    print_message "Securing MySQL installation..."
    
    # Generate secure passwords
    MYSQL_ROOT_PASSWORD=$(openssl rand -base64 32)
    MYSQL_MAIL_PASSWORD=$(openssl rand -base64 32)
    
    # Store passwords securely
    cat > /root/.mysql_credentials <<EOF
# MySQL Credentials for Mail Server
# Generated: $(date)
# Keep this file secure!

MYSQL_ROOT_PASSWORD='${MYSQL_ROOT_PASSWORD}'
MYSQL_MAIL_PASSWORD='${MYSQL_MAIL_PASSWORD}'
EOF
    chmod 600 /root/.mysql_credentials
    
    # Set root password and secure installation
    mysql --user=root <<EOF
ALTER USER 'root'@'localhost' IDENTIFIED BY '${MYSQL_ROOT_PASSWORD}';
DELETE FROM mysql.user WHERE User='';
DELETE FROM mysql.user WHERE User='root' AND Host NOT IN ('localhost', '127.0.0.1', '::1');
DROP DATABASE IF EXISTS test;
DELETE FROM mysql.db WHERE Db='test' OR Db='test\\_%';
FLUSH PRIVILEGES;
EOF
    
    print_message "MySQL root password saved in /root/.mysql_credentials"
    
    # Create mail database and user
    print_message "Creating mail database and user..."
    
    mysql --user=root --password="${MYSQL_ROOT_PASSWORD}" <<EOF
CREATE DATABASE IF NOT EXISTS mailserver;
CREATE USER IF NOT EXISTS 'mailuser'@'localhost' IDENTIFIED BY '${MYSQL_MAIL_PASSWORD}';
GRANT ALL PRIVILEGES ON mailserver.* TO 'mailuser'@'localhost';
FLUSH PRIVILEGES;

USE mailserver;

CREATE TABLE IF NOT EXISTS virtual_domains (
    id INT NOT NULL AUTO_INCREMENT,
    name VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY name (name)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS virtual_users (
    id INT NOT NULL AUTO_INCREMENT,
    domain_id INT NOT NULL,
    email VARCHAR(255) NOT NULL,
    password VARCHAR(255) NOT NULL,
    quota BIGINT DEFAULT 0,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    UNIQUE KEY email (email),
    FOREIGN KEY (domain_id) REFERENCES virtual_domains(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS virtual_aliases (
    id INT NOT NULL AUTO_INCREMENT,
    domain_id INT NOT NULL,
    source VARCHAR(255) NOT NULL,
    destination VARCHAR(255) NOT NULL,
    created_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    FOREIGN KEY (domain_id) REFERENCES virtual_domains(id) ON DELETE CASCADE
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;

CREATE TABLE IF NOT EXISTS sender_stats (
    id INT NOT NULL AUTO_INCREMENT,
    ip_address VARCHAR(45) NOT NULL,
    domain VARCHAR(255) NOT NULL,
    sent_count INT DEFAULT 0,
    bounce_count INT DEFAULT 0,
    last_sent TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id),
    KEY ip_address (ip_address),
    KEY domain (domain)
) ENGINE=InnoDB DEFAULT CHARSET=utf8mb4;
EOF
    
    print_message "MySQL database setup completed with secure password configuration."
    
    # Export password for use in other modules
    export MYSQL_MAIL_PASSWORD
    
    return 0
}

# Setup Dovecot
setup_dovecot() {
    local domain=$1
    
    print_header "Configuring Dovecot IMAP/POP3 Server"
    
    # Install Dovecot with MySQL support
    print_message "Installing Dovecot packages..."
    apt-get install -y \
        dovecot-core \
        dovecot-imapd \
        dovecot-pop3d \
        dovecot-lmtpd \
        dovecot-mysql
    
    # Stop Dovecot during configuration
    systemctl stop dovecot
    
    # Backup original configuration
    backup_config "dovecot"
    
    # Configure Dovecot main settings
    cat > /etc/dovecot/dovecot.conf <<EOF
# Dovecot configuration for mail server
# Generated by Mail Server Installer

# Protocols
protocols = imap pop3 lmtp

# Listen on all interfaces
listen = *, ::

# Base directory
base_dir = /var/run/dovecot/

# Instance name
instance_name = dovecot

# Greeting message
login_greeting = Mail Server Ready.

# Shutdown clients
shutdown_clients = yes

# DH parameters length
ssl_dh_parameters_length = 2048

!include_try /etc/dovecot/conf.d/*.conf
EOF
    
    # Configure mail location and authentication
    cat > /etc/dovecot/conf.d/10-mail.conf <<EOF
# Mail location and settings
mail_location = maildir:/var/mail/vhosts/%d/%n/Maildir
mail_uid = vmail
mail_gid = vmail
mail_privileged_group = vmail

namespace inbox {
  inbox = yes
  
  mailbox Drafts {
    special_use = \Drafts
    auto = subscribe
  }
  mailbox Junk {
    special_use = \Junk
    auto = subscribe
  }
  mailbox Trash {
    special_use = \Trash
    auto = subscribe
  }
  mailbox Sent {
    special_use = \Sent
    auto = subscribe
  }
}

first_valid_uid = 5000
last_valid_uid = 5000
first_valid_gid = 5000
last_valid_gid = 5000

mail_plugins = \$mail_plugins quota
EOF
    
    # Configure authentication
    cat > /etc/dovecot/conf.d/10-auth.conf <<EOF
# Authentication configuration
disable_plaintext_auth = yes
auth_mechanisms = plain login

# Include SQL authentication
!include auth-sql.conf.ext
EOF
    
    # Configure SQL authentication
    cat > /etc/dovecot/dovecot-sql.conf.ext <<EOF
driver = mysql
connect = host=127.0.0.1 dbname=mailserver user=mailuser password=${MYSQL_MAIL_PASSWORD}

default_pass_scheme = SHA512-CRYPT

password_query = \
  SELECT email as user, password \
  FROM virtual_users \
  WHERE email='%u';

user_query = \
  SELECT 5000 AS uid, 5000 AS gid, \
    CONCAT('/var/mail/vhosts/', SUBSTRING_INDEX(email, '@', -1), '/', SUBSTRING_INDEX(email, '@', 1)) AS home, \
    CONCAT('*:bytes=', quota) AS quota_rule \
  FROM virtual_users \
  WHERE email='%u';

iterate_query = SELECT email AS user FROM virtual_users;
EOF
    
    # Configure master settings
    cat > /etc/dovecot/conf.d/10-master.conf <<EOF
service imap-login {
  inet_listener imap {
    port = 143
  }
  inet_listener imaps {
    port = 993
    ssl = yes
  }
}

service pop3-login {
  inet_listener pop3 {
    port = 110
  }
  inet_listener pop3s {
    port = 995
    ssl = yes
  }
}

service lmtp {
  unix_listener /var/spool/postfix/private/dovecot-lmtp {
    mode = 0600
    user = postfix
    group = postfix
  }
}

service auth {
  unix_listener auth-userdb {
    mode = 0660
    user = vmail
    group = vmail
  }
  
  unix_listener /var/spool/postfix/private/auth {
    mode = 0660
    user = postfix
    group = postfix
  }
  
  user = dovecot
}

service auth-worker {
  user = vmail
}
EOF
    
    # Configure SSL
    cat > /etc/dovecot/conf.d/10-ssl.conf <<EOF
ssl = required
ssl_cert = </etc/ssl/certs/ssl-cert-snakeoil.pem
ssl_key = </etc/ssl/private/ssl-cert-snakeoil.key
ssl_client_ca_dir = /etc/ssl/certs
ssl_dh = </usr/share/dovecot/dh.pem

ssl_min_protocol = TLSv1.2
ssl_cipher_list = ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-ECDSA-AES256-GCM-SHA384
ssl_prefer_server_ciphers = yes
EOF
    
    # Create vmail user and directories
    print_message "Creating vmail user and directories..."
    groupadd -g 5000 vmail 2>/dev/null || true
    useradd -g vmail -u 5000 vmail -d /var/mail/vhosts -m -s /sbin/nologin 2>/dev/null || true
    
    mkdir -p /var/mail/vhosts
    chown -R vmail:vmail /var/mail/vhosts
    
    # Generate DH parameters
    if [ ! -f /usr/share/dovecot/dh.pem ]; then
        print_message "Generating DH parameters (this may take a while)..."
        openssl dhparam -out /usr/share/dovecot/dh.pem 2048
    fi
    
    # Set permissions
    chmod 600 /etc/dovecot/dovecot-sql.conf.ext
    chown root:root /etc/dovecot/dovecot-sql.conf.ext
    
    # Start and enable Dovecot
    systemctl start dovecot
    systemctl enable dovecot
    
    print_message "Dovecot configuration completed"
    
    return 0
}

# Add domain to MySQL
add_domain_to_mysql() {
    local domain=$1
    
    print_message "Adding domain $domain to database..."
    
    mysql --user=mailuser --password="${MYSQL_MAIL_PASSWORD}" mailserver <<EOF
INSERT INTO virtual_domains (name) VALUES ('${domain}') 
ON DUPLICATE KEY UPDATE name=name;
EOF
    
    return 0
}

# Add email user to MySQL
add_email_user() {
    local email=$1
    local password=$2
    local domain=$(echo $email | cut -d'@' -f2)
    
    print_message "Adding email user $email to database..."
    
    # Hash the password
    local hashed_password=$(doveadm pw -s SHA512-CRYPT -p "$password")
    
    mysql --user=mailuser --password="${MYSQL_MAIL_PASSWORD}" mailserver <<EOF
INSERT INTO virtual_users (domain_id, email, password, quota)
SELECT id, '${email}', '${hashed_password}', 1073741824
FROM virtual_domains WHERE name='${domain}'
ON DUPLICATE KEY UPDATE password='${hashed_password}';
EOF
    
    # Create maildir
    local user=$(echo $email | cut -d'@' -f1)
    mkdir -p "/var/mail/vhosts/${domain}/${user}/Maildir"
    chown -R vmail:vmail "/var/mail/vhosts/${domain}"
    
    print_message "Added email user $email"
    
    return 0
}

# Create database management script
create_db_management_script() {
    cat > /usr/local/bin/manage-mail-users <<'EOF'
#!/bin/bash

# Mail User Management Script
source /root/.mysql_credentials 2>/dev/null

function add_domain() {
    local domain=$1
    mysql -u mailuser -p"${MYSQL_MAIL_PASSWORD}" mailserver -e \
        "INSERT INTO virtual_domains (name) VALUES ('${domain}') ON DUPLICATE KEY UPDATE name=name;"
    echo "Domain ${domain} added"
}

function add_user() {
    local email=$1
    local password=$2
    local domain=$(echo $email | cut -d'@' -f2)
    
    # Hash password
    local hashed=$(doveadm pw -s SHA512-CRYPT -p "$password")
    
    # Add to database
    mysql -u mailuser -p"${MYSQL_MAIL_PASSWORD}" mailserver -e \
        "INSERT INTO virtual_users (domain_id, email, password, quota)
         SELECT id, '${email}', '${hashed}', 1073741824
         FROM virtual_domains WHERE name='${domain}'
         ON DUPLICATE KEY UPDATE password='${hashed}';"
    
    # Create maildir
    local user=$(echo $email | cut -d'@' -f1)
    mkdir -p "/var/mail/vhosts/${domain}/${user}/Maildir"
    chown -R vmail:vmail "/var/mail/vhosts/${domain}"
    
    echo "User ${email} added"
}

function list_users() {
    mysql -u mailuser -p"${MYSQL_MAIL_PASSWORD}" mailserver -e \
        "SELECT email, created_at FROM virtual_users;"
}

function delete_user() {
    local email=$1
    mysql -u mailuser -p"${MYSQL_MAIL_PASSWORD}" mailserver -e \
        "DELETE FROM virtual_users WHERE email='${email}';"
    echo "User ${email} deleted"
}

case "$1" in
    add-domain)
        add_domain "$2"
        ;;
    add-user)
        add_user "$2" "$3"
        ;;
    list)
        list_users
        ;;
    delete)
        delete_user "$2"
        ;;
    *)
        echo "Usage: $0 {add-domain|add-user|list|delete} [args]"
        echo "  add-domain domain.com"
        echo "  add-user email@domain.com password"
        echo "  list"
        echo "  delete email@domain.com"
        exit 1
        ;;
esac
EOF
    
    chmod +x /usr/local/bin/manage-mail-users
    print_message "Created mail user management script: /usr/local/bin/manage-mail-users"
}

export -f setup_mysql setup_dovecot add_domain_to_mysql
export -f add_email_user create_db_management_script
